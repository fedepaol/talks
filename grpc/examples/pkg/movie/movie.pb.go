// Code generated by protoc-gen-go. DO NOT EDIT.
// source: movie.proto

package movie

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MovieErrorCode int32

const (
	MovieErrorCode_UNKNOWN         MovieErrorCode = 0
	MovieErrorCode_INVALID_MOVIE   MovieErrorCode = 1
	MovieErrorCode_MOVIE_NOT_FOUND MovieErrorCode = 2
)

var MovieErrorCode_name = map[int32]string{
	0: "UNKNOWN",
	1: "INVALID_MOVIE",
	2: "MOVIE_NOT_FOUND",
}

var MovieErrorCode_value = map[string]int32{
	"UNKNOWN":         0,
	"INVALID_MOVIE":   1,
	"MOVIE_NOT_FOUND": 2,
}

func (x MovieErrorCode) String() string {
	return proto.EnumName(MovieErrorCode_name, int32(x))
}

func (MovieErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fde087a4194eda75, []int{0}
}

type MovieID struct {
	Mid                  int32    `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MovieID) Reset()         { *m = MovieID{} }
func (m *MovieID) String() string { return proto.CompactTextString(m) }
func (*MovieID) ProtoMessage()    {}
func (*MovieID) Descriptor() ([]byte, []int) {
	return fileDescriptor_fde087a4194eda75, []int{0}
}

func (m *MovieID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MovieID.Unmarshal(m, b)
}
func (m *MovieID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MovieID.Marshal(b, m, deterministic)
}
func (m *MovieID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MovieID.Merge(m, src)
}
func (m *MovieID) XXX_Size() int {
	return xxx_messageInfo_MovieID.Size(m)
}
func (m *MovieID) XXX_DiscardUnknown() {
	xxx_messageInfo_MovieID.DiscardUnknown(m)
}

var xxx_messageInfo_MovieID proto.InternalMessageInfo

func (m *MovieID) GetMid() int32 {
	if m != nil {
		return m.Mid
	}
	return 0
}

type MovieQueryParams struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MovieQueryParams) Reset()         { *m = MovieQueryParams{} }
func (m *MovieQueryParams) String() string { return proto.CompactTextString(m) }
func (*MovieQueryParams) ProtoMessage()    {}
func (*MovieQueryParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_fde087a4194eda75, []int{1}
}

func (m *MovieQueryParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MovieQueryParams.Unmarshal(m, b)
}
func (m *MovieQueryParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MovieQueryParams.Marshal(b, m, deterministic)
}
func (m *MovieQueryParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MovieQueryParams.Merge(m, src)
}
func (m *MovieQueryParams) XXX_Size() int {
	return xxx_messageInfo_MovieQueryParams.Size(m)
}
func (m *MovieQueryParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MovieQueryParams.DiscardUnknown(m)
}

var xxx_messageInfo_MovieQueryParams proto.InternalMessageInfo

func (m *MovieQueryParams) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type Movie struct {
	Mid                  int32    `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	MovieName            string   `protobuf:"bytes,2,opt,name=movie_name,json=movieName,proto3" json:"movie_name,omitempty"`
	MovieDescription     string   `protobuf:"bytes,3,opt,name=movie_description,json=movieDescription,proto3" json:"movie_description,omitempty"`
	MovieStyle           string   `protobuf:"bytes,4,opt,name=movie_style,json=movieStyle,proto3" json:"movie_style,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Movie) Reset()         { *m = Movie{} }
func (m *Movie) String() string { return proto.CompactTextString(m) }
func (*Movie) ProtoMessage()    {}
func (*Movie) Descriptor() ([]byte, []int) {
	return fileDescriptor_fde087a4194eda75, []int{2}
}

func (m *Movie) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Movie.Unmarshal(m, b)
}
func (m *Movie) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Movie.Marshal(b, m, deterministic)
}
func (m *Movie) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Movie.Merge(m, src)
}
func (m *Movie) XXX_Size() int {
	return xxx_messageInfo_Movie.Size(m)
}
func (m *Movie) XXX_DiscardUnknown() {
	xxx_messageInfo_Movie.DiscardUnknown(m)
}

var xxx_messageInfo_Movie proto.InternalMessageInfo

func (m *Movie) GetMid() int32 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *Movie) GetMovieName() string {
	if m != nil {
		return m.MovieName
	}
	return ""
}

func (m *Movie) GetMovieDescription() string {
	if m != nil {
		return m.MovieDescription
	}
	return ""
}

func (m *Movie) GetMovieStyle() string {
	if m != nil {
		return m.MovieStyle
	}
	return ""
}

type MovieError struct {
	Reason               MovieErrorCode `protobuf:"varint,1,opt,name=reason,proto3,enum=MovieErrorCode" json:"reason,omitempty"`
	Message              string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MovieError) Reset()         { *m = MovieError{} }
func (m *MovieError) String() string { return proto.CompactTextString(m) }
func (*MovieError) ProtoMessage()    {}
func (*MovieError) Descriptor() ([]byte, []int) {
	return fileDescriptor_fde087a4194eda75, []int{3}
}

func (m *MovieError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MovieError.Unmarshal(m, b)
}
func (m *MovieError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MovieError.Marshal(b, m, deterministic)
}
func (m *MovieError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MovieError.Merge(m, src)
}
func (m *MovieError) XXX_Size() int {
	return xxx_messageInfo_MovieError.Size(m)
}
func (m *MovieError) XXX_DiscardUnknown() {
	xxx_messageInfo_MovieError.DiscardUnknown(m)
}

var xxx_messageInfo_MovieError proto.InternalMessageInfo

func (m *MovieError) GetReason() MovieErrorCode {
	if m != nil {
		return m.Reason
	}
	return MovieErrorCode_UNKNOWN
}

func (m *MovieError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterEnum("MovieErrorCode", MovieErrorCode_name, MovieErrorCode_value)
	proto.RegisterType((*MovieID)(nil), "MovieID")
	proto.RegisterType((*MovieQueryParams)(nil), "MovieQueryParams")
	proto.RegisterType((*Movie)(nil), "Movie")
	proto.RegisterType((*MovieError)(nil), "MovieError")
}

func init() { proto.RegisterFile("movie.proto", fileDescriptor_fde087a4194eda75) }

var fileDescriptor_fde087a4194eda75 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x51, 0xdd, 0x4e, 0xf2, 0x40,
	0x10, 0xfd, 0x0a, 0x1f, 0x7f, 0x43, 0x80, 0x32, 0x7a, 0xd1, 0xf8, 0x13, 0x4d, 0x6f, 0x44, 0x4d,
	0x1a, 0x83, 0x4f, 0x60, 0x2c, 0x9a, 0x46, 0xd9, 0x2a, 0x08, 0x7a, 0xd7, 0x54, 0x98, 0x98, 0x26,
	0x96, 0xc5, 0xdd, 0x4a, 0xc2, 0x0b, 0xf8, 0xdc, 0xa6, 0xb3, 0x34, 0x44, 0xbd, 0x9b, 0x33, 0xe7,
	0xec, 0xd9, 0x93, 0x39, 0xd0, 0x4c, 0xe5, 0x2a, 0x21, 0x6f, 0xa9, 0x64, 0x26, 0xdd, 0x7d, 0xa8,
	0x0d, 0x73, 0x18, 0xf8, 0x68, 0x43, 0x39, 0x4d, 0xe6, 0x8e, 0x75, 0x6c, 0xf5, 0x2a, 0xa3, 0x7c,
	0x74, 0x7b, 0x60, 0x33, 0xf9, 0xf8, 0x49, 0x6a, 0xfd, 0x10, 0xab, 0x38, 0xd5, 0xb8, 0x0b, 0x95,
	0x8f, 0x1c, 0xb2, 0xae, 0x31, 0x32, 0xc0, 0xfd, 0xb2, 0xa0, 0xc2, 0xd2, 0xbf, 0x2e, 0x78, 0x08,
	0xc0, 0x3f, 0x46, 0x8b, 0x38, 0x25, 0xa7, 0xc4, 0xcf, 0x1a, 0xbc, 0x11, 0x71, 0x4a, 0x78, 0x0e,
	0x5d, 0x43, 0xcf, 0x49, 0xcf, 0x54, 0xb2, 0xcc, 0x12, 0xb9, 0x70, 0xca, 0xac, 0xb2, 0x99, 0xf0,
	0xb7, 0x7b, 0x3c, 0xda, 0xa4, 0x8f, 0x74, 0xb6, 0x7e, 0x27, 0xe7, 0x3f, 0xcb, 0x8c, 0xfd, 0x38,
	0xdf, 0xb8, 0x21, 0x00, 0xe7, 0x18, 0x28, 0x25, 0x15, 0x9e, 0x40, 0x55, 0x51, 0xac, 0xe5, 0x82,
	0xf3, 0xb4, 0xfb, 0x1d, 0x6f, 0x4b, 0x5e, 0xcb, 0x39, 0x8d, 0x36, 0x34, 0x3a, 0x50, 0x4b, 0x49,
	0xeb, 0xf8, 0xad, 0x08, 0x58, 0xc0, 0xb3, 0x01, 0xb4, 0x7f, 0xbe, 0xc1, 0x26, 0xd4, 0x26, 0xe2,
	0x4e, 0x84, 0xcf, 0xc2, 0xfe, 0x87, 0x5d, 0x68, 0x05, 0x62, 0x7a, 0x75, 0x1f, 0xf8, 0xd1, 0x30,
	0x9c, 0x06, 0x03, 0xdb, 0xc2, 0x1d, 0xe8, 0xf0, 0x18, 0x89, 0xf0, 0x29, 0xba, 0x09, 0x27, 0xc2,
	0xb7, 0x4b, 0xfd, 0x17, 0x68, 0xb1, 0x8d, 0x1e, 0x93, 0x5a, 0x25, 0x33, 0xc2, 0x03, 0xa8, 0xdf,
	0x52, 0x66, 0x6e, 0x56, 0xf7, 0x36, 0x1d, 0xec, 0x55, 0xcd, 0x84, 0xa7, 0x00, 0x7c, 0x74, 0x83,
	0xba, 0xde, 0xef, 0x1a, 0x0a, 0xe1, 0x85, 0xf5, 0x5a, 0xe5, 0x22, 0x2f, 0xbf, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x4c, 0x9e, 0xf7, 0x33, 0xd7, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MoviesServiceClient is the client API for MoviesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MoviesServiceClient interface {
	GetMovie(ctx context.Context, in *MovieID, opts ...grpc.CallOption) (*Movie, error)
	QueryMovie(ctx context.Context, in *MovieQueryParams, opts ...grpc.CallOption) (MoviesService_QueryMovieClient, error)
}

type moviesServiceClient struct {
	cc *grpc.ClientConn
}

func NewMoviesServiceClient(cc *grpc.ClientConn) MoviesServiceClient {
	return &moviesServiceClient{cc}
}

func (c *moviesServiceClient) GetMovie(ctx context.Context, in *MovieID, opts ...grpc.CallOption) (*Movie, error) {
	out := new(Movie)
	err := c.cc.Invoke(ctx, "/MoviesService/GetMovie", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moviesServiceClient) QueryMovie(ctx context.Context, in *MovieQueryParams, opts ...grpc.CallOption) (MoviesService_QueryMovieClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MoviesService_serviceDesc.Streams[0], "/MoviesService/QueryMovie", opts...)
	if err != nil {
		return nil, err
	}
	x := &moviesServiceQueryMovieClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MoviesService_QueryMovieClient interface {
	Recv() (*Movie, error)
	grpc.ClientStream
}

type moviesServiceQueryMovieClient struct {
	grpc.ClientStream
}

func (x *moviesServiceQueryMovieClient) Recv() (*Movie, error) {
	m := new(Movie)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MoviesServiceServer is the server API for MoviesService service.
type MoviesServiceServer interface {
	GetMovie(context.Context, *MovieID) (*Movie, error)
	QueryMovie(*MovieQueryParams, MoviesService_QueryMovieServer) error
}

// UnimplementedMoviesServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMoviesServiceServer struct {
}

func (*UnimplementedMoviesServiceServer) GetMovie(ctx context.Context, req *MovieID) (*Movie, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMovie not implemented")
}
func (*UnimplementedMoviesServiceServer) QueryMovie(req *MovieQueryParams, srv MoviesService_QueryMovieServer) error {
	return status.Errorf(codes.Unimplemented, "method QueryMovie not implemented")
}

func RegisterMoviesServiceServer(s *grpc.Server, srv MoviesServiceServer) {
	s.RegisterService(&_MoviesService_serviceDesc, srv)
}

func _MoviesService_GetMovie_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MovieID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoviesServiceServer).GetMovie(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MoviesService/GetMovie",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoviesServiceServer).GetMovie(ctx, req.(*MovieID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MoviesService_QueryMovie_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MovieQueryParams)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MoviesServiceServer).QueryMovie(m, &moviesServiceQueryMovieServer{stream})
}

type MoviesService_QueryMovieServer interface {
	Send(*Movie) error
	grpc.ServerStream
}

type moviesServiceQueryMovieServer struct {
	grpc.ServerStream
}

func (x *moviesServiceQueryMovieServer) Send(m *Movie) error {
	return x.ServerStream.SendMsg(m)
}

var _MoviesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "MoviesService",
	HandlerType: (*MoviesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMovie",
			Handler:    _MoviesService_GetMovie_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "QueryMovie",
			Handler:       _MoviesService_QueryMovie_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "movie.proto",
}
